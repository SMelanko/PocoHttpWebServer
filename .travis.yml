language: cpp

sudo: required
dist: trusty

matrix:
  include:

    ###########################################################################
    # GCC on Linux.
    #

    #
    # GCC 5 Release.
    #
    - os: linux
      env:
        - CC_COMPILER=gcc-5
        - CXX_COMPILER=g++-5
        - BUILD_TYPE=Release
      addons: &gcc5
        apt:
          packages:
            - gcc-5
            - g++-5
            - libssl-dev
          sources:
            - ubuntu-toolchain-r-test
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - conan install .. --build -s build_type=${BUILD_TYPE} -s compiler.libcxx=libstdc++11
        - cmake .. -DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE}

    #
    # GCC 6 Release.
    #
    - os: linux
      env:
        - CC_COMPILER=gcc-6
        - CXX_COMPILER=g++-6
        - BUILD_TYPE=Release
      addons: &gcc6
        apt:
          packages:
            - gcc-6
            - g++-6
            - libssl-dev
          sources:
            - ubuntu-toolchain-r-test
      script:
        - cd "${TRAVIS_BUILD_DIR}"
        - mkdir -p build && cd build
        - conan install .. --build -s build_type=${BUILD_TYPE} -s compiler.libcxx=libstdc++11
        - cmake .. -DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
        - cmake --build . --config ${BUILD_TYPE}

    # GCC 7 Debug.
    - os: linux
      env:
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Debug
      addons: &gcc7
        apt:
          packages:
            - gcc-7
            - g++-7
            - libssl-dev
          sources:
            - ubuntu-toolchain-r-test
      script:
        - cd "${TRAVIS_BUILD_DIR}" && mkdir -p build && cd build
        - conan install .. --build -s build_type=${BUILD_TYPE} -s compiler.libcxx=libstdc++11
        - cmake .. -DCMAKE_BUILD_TYPE:STRING=${BUILD_MODE}
        - cmake --build . --config ${BUILD_TYPE}

    # GCC 7 Release.
    - os: linux
      env:
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Release
      addons: *gcc7
      script:
        - cd "${TRAVIS_BUILD_DIR}" && mkdir -p build && cd build
        - conan install .. --build -s build_type=${BUILD_TYPE} -s compiler.libcxx=libstdc++11
        - cmake .. -DCMAKE_BUILD_TYPE:STRING=${BUILD_MODE}
        - cmake --build . --config ${BUILD_TYPE}

    # GCC 7 Debug with Cdecov and Coveralls.
    - os: linux
      env:
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Debug
        - ENABLE_TESTING=TRUE
        - ENABLE_COVERAGE=TRUE
      addons: *gcc7
      before_install:
        pip install --user cpp-coveralls
      script:
        - cd "${TRAVIS_BUILD_DIR}" && mkdir -p build && cd build
        - conan install .. --build -s build_type=${BUILD_TYPE} -s compiler.libcxx=libstdc++11
        - |
          cmake .. \
            -DCMAKE_BUILD_TYPE:STRING=${BUILD_MODE} \
            -DENABLE_TESTING:BOOL=${ENABLE_TESTING} \
            -DENABLE_COVERAGE:BOOL=${ENABLE_COVERAGE}
        - cmake --build . --config ${BUILD_TYPE}
      after_success:
        - ctest --extra-verbose --parallel 2
        - |
          # Codecov - upload the report.
          bash <(curl -s https://codecov.io/bash)
          # Coveralls - upload the report.
          cd ..
          coveralls --build-root build --gcov-options '\-lp' \
            -e build/external \
            -e build/catch \
            -e cmake \
            -E ".*CMakeFiles.*"

    # GCC 7 Debug with Cppcheck.
    - os: linux
      env:
        - CC_COMPILER=gcc-7
        - CXX_COMPILER=g++-7
        - BUILD_TYPE=Debug
        - ENABLE_CPPCHECK=TRUE
      addons: *gcc7
      script:
        - cd "${TRAVIS_BUILD_DIR}" && mkdir -p build && cd build
        - conan install .. --build -s build_type=${BUILD_TYPE} -s compiler.libcxx=libstdc++11
        - |
          cmake .. \
            -DCMAKE_BUILD_TYPE:STRING=${BUILD_MODE} \
            -DENABLE_CPPCHECK:BOOL=${ENABLE_CPPCHECK}
        - cmake --build . --config ${BUILD_TYPE}
      after_success:
        - make check

  exclude:
    - os: osx
      compiler: gcc
    - os: linux
      compiler: clang

install:
  # Set up the environment.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      # Fix OpenSSL issue during building: "/util/domd: 33: ../util/domd: makedepend: not found".
      # The makedepend package contains a C-preprocessor like utility to determine build-time dependencies.
      sudo apt-get install xutils-dev
      # Set the ${CC} variable properly.
      export CC=${CC_COMPILER}
      ${CC} --version
    fi
  # Set the ${CXX} variable properly.
  - export CXX=${CXX_COMPILER}
  - ${CXX} --version

  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/.
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}" && cd "${DEPS_DIR}"
  # Install a recent CMake (unless already installed on macOS) and Conan.
  - |
    if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
      CMAKE_VERSION=3.10.0
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      sudo pip install conan
    else
      brew update
      brew install cmake || brew upgrade cmake
      brew install conan || brew upgrade conan
    fi
